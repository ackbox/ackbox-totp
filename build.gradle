group "com.ackbox"
version "1.0"

ext {
    mavenUsername = project.hasProperty('mavenUsername') ? project.getProperty('mavenUsername') : ''
    mavenPassword = project.hasProperty('mavenPassword') ? project.getProperty('mavenPassword') : ''
}

buildscript {
    ext.apacheCommonsCodecVersion = "1.10"
    ext.kotlinVersion = "1.1.3-eap-68"
    ext.slf4jVersion = "1.7.7"

    repositories {
        maven { url "http://dl.bintray.com/kotlin/kotlin-eap-1.1" }
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: "kotlin"
apply plugin: "maven-publish"

repositories {
    maven { url "http://dl.bintray.com/kotlin/kotlin-eap-1.1" }
    mavenCentral()
}

dependencies {
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
    compile "commons-codec:commons-codec:$apacheCommonsCodecVersion"
    testCompile "junit:junit:4.12"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar
            artifact javadocJar

            tasks.withType(Jar) {
                from(project.projectDir) {
                    include 'LICENSE'
                    into 'META-INF'
                }
            }
        }
        mavenCustom(MavenPublication) {
            pom.withXml {
                asNode().with {
                    appendNode('description', 'TOTP authenticator written in Kotlin')
                    appendNode('url', 'https://github.com/ackbox/ackbox-totp')
                    appendNode('scm').with {
                        appendNode('url', 'https://github.com/ackbox/ackbox-totp')
                        appendNode('connection', 'scm:git:git://github.com/ackbox/ackbox-totp.git')
                    }
                    appendNode('licenses').with {
                        appendNode('license').with {
                            appendNode('name', 'MIT License')
                            appendNode('url', 'https://github.com/ackbox/ackbox-totp/blob/master/LICENSE')
                        }
                    }
                    appendNode('organization').with {
                        appendNode('name', 'Ackbox')
                        appendNode('url', 'https://ackbox.com')
                    }
                    appendNode('developers').with {
                        appendNode('developer').with {
                            appendNode('id', 'trein')
                            appendNode('name', 'Guilherme M. Trein')
                            appendNode('email', 'trein@ackbox.com')
                            appendNode('organization', 'Ackbox')
                            appendNode('organizationUrl', 'https://ackbox.com')
                            appendNode('timezone', '1')
                        }
                    }
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                // requires $ gradle publish -P mavenUsername=??? -P mavenPassword=???
                username project.mavenUsername
                password project.mavenPassword
            }
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
        }
    }
}

model {
    tasks.generatePomFileForMavenCustomPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
}